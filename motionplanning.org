移动机器人的路径规划是为了解决：考虑到机器人的约束的情况下规划一条从起始点到终止点的路径。

* 一些基本概念和基本方法
** 基本概念
*** 构型
系统中每个点位姿的一个完整的详细说明（每个自由度都一个对应的维度表示）。

*** 构型空间(C-space)
所有构型组成的空间。

*** 工作空间
机器人操作的范围。(除去障碍物和不可达空间)

*** 状态空间
机器人的空间参数。

*** 自由状态空间
包含的状态空间中的机器人都处于无障碍物构型的一组状态空间的子集。

*** 路径
状态空间中一组连续的状态。

** 基本方法
+ 在处理具有一定尺寸大小的机器人运动时，可以把机器人的尺寸大小转移到障碍物中去。

* 算法概述
低维的问题可以直接使用在构型空间上构造栅格的基于栅格的算法来解决;
或者使用计算自由构型空间（C_free）形状和联通性的几何算法来求解。

拥有复杂约束的高维系统的精确的路径规划在计算上是难以求解的。
势场算法是非常高效的，但会陷入局部极小值点。

基于采样的方法可以避免局部极小的问题，并且对于很多问题求解速度很快。
它们不能确定路径不存在的情况，但有着概率完备的性质。

* 基于栅格的搜索方法
基于栅格的方法是在构型空间中覆盖了一层栅格，其假设每个栅格点的构型都是不同的。
其通过栅格精度来调节计算速度和路径的完备性。

** 基本方法
在每个栅格中都可以移动到相邻的栅格点只要不会发生障碍物的碰撞。
可以结合图论的搜索方法来找到一条从起点到终点的最优路径。

** 一些改进方案
+ 传统的基于栅格的方法产生的路径被限定在几个固定的方向，通常会导致只能获得次优路径。
Any-angle path planning通过栅格的边上传递信息来获取最短路径。
+ 在动态环境中，基于栅格的方法会产生大量的重复计算。
增量式启发式方法通过之前的计算信息来加速再次规划所产生的计算。

* 几何算法
Translating objects among obstacles: Minkowski sum
** 可视图法
可视图一般是用来表示一系列点和障碍物之间的可视位置关系的图。
图中每个点表示一个点的位置，每一条边表示它们之间的可视连接。

*** 基本方法
加入了障碍物的顶点和工作区域顶点之后，连接可视的边。
下面两种情况的连线可认为是可视边：
+ 连线对应于障碍物上的边
+ 连线存在于自由空间中

*** 优点
可以解决多边形障碍物的情况。

*** 缺点
+ 可视图法需要将每个障碍物相连，会产生N^2条边，极大的占用了存储空间。
不过已经有一些改进方案比如：Reduced Visibility graphs。
+ 我们需要加入起始点和终止点以及对应的每一条边。

** 栅格划分法(from a survey on path planning for robotics)
*** 期望结果
将环境地图中的无障碍物空间(free space)分解为简单不交叉的区域。

*** 目的
之前的问题就可以转换为划分的大栅格构成的邻接图的搜索问题。

*** 基本路径规划
+ 首先确定起始点和终止点所在的大的栅格。
+ 之后就可在邻接图进行搜索找到一条路径。

*** 经典的精确分割方法(classic exact celluar decomposition methods)
均为离线算法--依赖的是静态信息，并且假设环境信息已知，其中的障碍物均为多边形障碍物。

**** 四边形分解(Trapezoidal decomposition)
分解后的区域均为四边形，不过仅处理平面的多边形空间。

**** 左行右行交互式分解(Boustrophedon decomposition)
在扫测问题中因为四边形分解法只能产生四边形栅格，其产生的很多栅格即使合并在一起也是可以完成全路径的覆盖的。

该种分解方法和四边形分解法类似，不过它仅仅考虑垂线段上可以同时延伸到点的上方和下方的点。

** Morsed-based celluar decomposition
**** 基本方法
该种方法是Morse函数的关键节点以及基于起点和终点的路线图(roadmap)的方法。

通过使用感觉范围的信息来探测关键点，
使用基于运动模板的算法(motion-template-based)算法来确保探测到在目标区域中的所有关键节点。

***** 离线分割的基本步骤
根据Morse方程选定的切片沿着扫描方向运动，遇到的障碍物会将切片分割为小的部分。
切片个数变化的点称为关键点。

一旦工作区域内的区域分割完成之后，就可以生成相关联通图的遍历路径。
之后需要生成的就是每个划分区域内的区域覆盖，这部分可以通过三个动作来完成：
沿着切片方向的运动，垂直于切片方向的运动和沿着区域边界的运动。

需要注意的是如果在沿着切片运动过程中遇到了障碍物，机器人选择沿着障碍物移动一个扫描宽度，再重新开始新的步骤。

**** 优点
+ 相对于经典的区域分割方法，Morse-based分割可以处理非多边形的障碍物。
+ 通过选择不同的Morse函数来确定切片的形状，可以产生不同的分解和路径覆盖模式，
对于有运动约束的载体来说是特别有效的。
+ 理论上，这种方法可以适用于任何维度的空间。
+ 这种方法也适用于在线的完全覆盖任务

**** 缺点
Morse分解应用于直线运动的环境，因为此时相对应的拓扑环境会发生改变，
关键点会无法探测到。

**** 在线的基于Morse的左行右行交互式分解方法
在该算法中关键点被定义为当前点和障碍物之间的梯度方向和扫描方向平行的点。

***** 具体步骤
边运动边探测边规划边根据探测到的再次更新信息。

***** 细节
为了避免简单的z字形行走可能会错过关键节点的问题，需要使用包含了回撤运动的Cycle算法。
并且为了储存并不断在线构建Morse分解，区域信息需要储存为Reeb图。

***** 不足
Cycle算法存在的一个问题就是可能在探测不到非凸面体障碍物关键点。

**** 结合了广义Voronoi图的基于Morse的分解方法
针对探测范围在机器人之外但为有限范围的情况

***** 具体步骤
+ 在机器人可以使用完整探测范围的大的开阔空间中时，直接使用之前的Morse分解方法来覆盖未知范围。
+ 在障碍物都在探测范围内的狭小拥挤的情况下，
因为此时探测器的覆盖范围超过了空间，只需要一次通过即可，机器人可以沿着空间的广义Voronoi图方向运动。

*** 基于路标的拓扑覆盖

使用基于探测自然路标的针对移动机器人的拓扑覆盖算法。

**** 优点
可以处理很大部分的环境，包括多边形，椭圆的和直线运动的障碍物。

**** 缺点
由于只有五种事件，只能处理简单的平面环境。

**** 切线分割方法
该种方法通过直线扫描来进行切片的分割，并使用五种事件来确定区域边界，
分别是：分割事件，合并事件，伸长事件，收缩事件，终止事件

这些事件可以通过范围阈值的测量，多帧比较，几何测量结合的方法测量，
也可以使用神经网络测量。

切线分割的结果可以以拓扑图的形式保存，其中结点表示路标（事件），
边表示为可以从一个事件达到另一个事件所需进行的运动。

**** 在线的拓扑图覆盖算法
基本思想是使用拥有三个状态的有限状态机(边界、正常和转移)来不断的进行切片分割和拓扑图构建。

其中边界状态通过探索当前边的所有相邻区域，而很好的处理直线运动的情况。

*** 在直线运动环境中基于接触式传感器的路径覆盖
Contact sensor-based coverage of rectilinear environments

针对的是没有范围感觉能力的机器人在未知的直线运动环境中在线探测的情况。

**** 基本步骤
使用Cycle算法进行路径的覆盖，与此同时不断的构建环境的区域分割。

只有当遇到区域边界而无法继续进行环形路径扫描时，
选择一个仅仅基于机器人环境和当前位置的新路径。

* 基于激励的算法
基于激励的算法算法假设机器人在每个状态都可以从不同的动作中进行选择。
但是每个动作的结果都不是确定性的。(结果位姿部分取决于概率部分取决于机器人的控制)

** 基本原理
当机器人到达目标时获得正激励，碰到障碍物时获得负激励。
算法寻找一条能够最大化未来的激励的路径。

*** Markov选择过程（MDP）
是很多基于激励算法使用的流行框架

**** 优点
能过生成最优路径

**** 缺点
能过选择的动作有限，会产生路径不够平滑的问题。

* 基于控制的方法
基于控制的方法是通过对系统的运动方程进行建模，
之后再利用控制理论来引导系统生成沿着特定的轨迹的路线。

** 特点
+ 适用于连续空间。
+ 通过反馈循环来高效的使系统达到最小的误差。

** 优点
+ 计算速度快
+ 可以作为在线算法使用

* 势场法
经典的势场法通过计算一个来自终点的吸引力和来自所有障碍物的排斥力的和，
以在工作空间的每个点生成一个向量。
之后可以通过梯度下降的方法来引导机器人到达终止点。

** 问题
通过启发式方法结合工作空间中的作用力会使系统陷入势场的局部极小值点。

** 改进
+ 可以使用单个极值点的导航函数。
但只能用于低维空间和非平凡(?)的情况。
+ 使用随即方法来高效地引导系统走出局部极小点。

* 基于采样的路径规划方法(from ompl)
** 优点
+ 和别的路径规划方法相比，只需要一个很小的存储空间
+ 适用于有差分约束的系统
+ 适用于有很多自由度的系统
+ 在包含了数量很多并且非常复杂的状态空间中可以快速生成一条可行路径
+ 大部分基于采样的方法是概率完备的
（如果路径存在并且不断增加采样个数，找到路径的概率就会收敛到1）

** 缺点
+ 不具有最优性和完备性(no optimality or completeness?)。
和方案质量与运行时间之间的权衡。
+ 在窄通道和约束表面附近的很难生成采样点

** 概率地图法(Probabilistic Roadmap)
在状态空间中使用了随机采样的方法来构建了一个由自由状态空间组成的地图。

*** 基本步骤
+ 在状态空间中均匀地随即生成采样点（有多种不同效果的采样策略）
+ 通过检查是否碰撞来获取无碰撞的采样点
+ 通过使用可以寻找最近的无碰撞的路径的局部规划器来将每个采样点和最近的k个采样点相连。
+ 最后在地图中进行图论搜索来寻找到一条最短路径。

** 基于树的规划方法(Tree-based Planners)
和概率地图法的区别在于生成的图的结构中不包含循环。

*** 优点
+ 适用于单次查询的路径规划
+ 由于其结构的有向性和非循环的特点，
基于树的规划方法在处理有复杂的动力学特性的规划方面特别出色。

*** 一些改进
因为在采样过程中非常难以直接采样到终点的状态，
很多方法都会朝着终止点来调整树伸展的方向。

*** 基本步骤
+ 使用启发式的伸展方法来将随即采样点连接到树上。
+ 当可以将终止点连接到已经生成的树上时，该搜索完成。

** 快速伸展树方法(Rapidly-Exploring Random Trees)
*** 基本算法
#+BEGIN_EXAMPLE
BUILD_RRT(q_init) {
T.init(q_init);
for k = 1 to K do
q_rand = RANDOM_CONFIG();
EXTEND(T,q_rand);
end
}
#+END_EXAMPLE
*** 改进
+ 朝着大的空间方向伸展
+ 朝着目标方向伸展
