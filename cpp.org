* Coverage Path Planning
路径覆盖规划的人物是确定一条通过区域中所有点或volume of interest(如何理解？)的无碰撞路径。
* cellular decomposition methods (A survey on coverage path planning for robotics)
** 期望结果
将环境地图中的无障碍物空间(free space)分解为简单不交叉的区域。
** 目的
分解完的区域可以让机器人通过简单的算法来实现区域的全覆盖。
** 划分之后
在完成了区域分解之后，整体区域的扫描问题可以转换为分解的各个小区域中的扫描和所有小区域之间的一次完整遍历的问题。

一般采用邻接图来作为所分解的小区域的表示方法。(如果两个区域之间具有共同的边界的话，就认为他们是相邻接的)
在确定了划分区域的邻接图之后就可以使用完整遍历算法来计算出这些区域的遍历顺序。(每个点经过且仅经过一次)

** 经典的精确分割方法(classic exact celluar decomposition methods)
均为离线算法--依赖的是静态信息，并且假设环境信息已知，其中的障碍物均为多边形障碍物。

*** 四边形分解(Trapezoidal decomposition)
分解后的区域均为四边形，不过仅处理平面的多边形空间。分解之后的区域通过简单来回动作即可实现区域的完全遍历。

*** 左行右行交互式分解(Boustrophedon decomposition)
因为四边形分解法只能产生四边形栅格，其产生的很多栅格即使合并在一起也是可以完成全路径的覆盖的。

该种分解方法和四边形分解法类似，不过它仅仅考虑垂线段上可以同时延伸到点的上方和下方的点。

** Morsed-based celluar decomposition
*** 基本方法
该种方法是Morse函数的关键节点以及基于起点和终点的路线图(roadmap)的方法。

通过使用感觉范围的信息来探测关键点，
使用基于运动模板的算法(motion-template-based)算法来确保探测到在目标区域中的所有关键节点。

**** 离线分割的基本步骤
根据Morse方程选定的切片沿着扫描方向运动，遇到的障碍物会将切片分割为小的部分。
切片个数变化的点称为关键点。

一旦工作区域内的区域分割完成之后，就可以生成相关联通图的遍历路径。
之后需要生成的就是每个划分区域内的区域覆盖，这部分可以通过三个动作来完成：
沿着切片方向的运动，垂直于切片方向的运动和沿着区域边界的运动。

需要注意的是如果在沿着切片运动过程中遇到了障碍物，机器人选择沿着障碍物移动一个扫描宽度，再重新开始新的步骤。

*** 优点
+ 相对于经典的区域分割方法，Morse-based分割可以处理非多边形的障碍物。
+ 通过选择不同的Morse函数来确定切片的形状，可以产生不同的分解和路径覆盖模式，
对于有运动约束的载体来说是特别有效的。
+ 理论上，这种方法可以适用于任何维度的空间。
+ 这种方法也适用于在线的完全覆盖任务

*** 缺点
Morse分解应用于直线运动的环境，因为此时相对应的拓扑环境会发生改变，
关键点会无法探测到。

*** 在线的基于Morse的左行右行交互式分解方法
在该算法中关键点被定义为当前点和障碍物之间的梯度方向和扫描方向平行的点。

**** 具体步骤
边运动边探测边规划边根据探测到的再次更新信息。

**** 细节
为了避免简单的z字形行走可能会错过关键节点的问题，需要使用包含了回撤运动的Cycle算法。
并且为了储存并不断在线构建Morse分解，区域信息需要储存为Reeb图。

**** 不足
Cycle算法存在的一个问题就是可能在探测不到非凸面体障碍物关键点。

*** 结合了广义Voronoi图的基于Morse的分解方法
针对探测范围在机器人之外但为有限范围的情况

**** 具体步骤
+ 在机器人可以使用完整探测范围的大的开阔空间中时，直接使用之前的Morse分解方法来覆盖未知范围。
+ 在障碍物都在探测范围内的狭小拥挤的情况下，
因为此时探测器的覆盖范围超过了空间，只需要一次通过即可，机器人可以沿着空间的广义Voronoi图方向运动。

** 基于路标的拓扑覆盖

使用基于探测自然路标的针对移动机器人的拓扑覆盖算法。

*** 优点
可以处理很大部分的环境，包括多边形，椭圆的和直线运动的障碍物。

*** 缺点
由于只有五种事件，只能处理简单的平面环境。

*** 切线分割方法
该种方法通过直线扫描来进行切片的分割，并使用五种事件来确定区域边界，
分别是：分割事件，合并事件，伸长事件，收缩事件，终止事件

这些事件可以通过范围阈值的测量，多帧比较，几何测量结合的方法测量，
也可以使用神经网络测量。

切线分割的结果可以以拓扑图的形式保存，其中结点表示路标（事件），
边表示为可以从一个事件达到另一个事件所需进行的运动。

*** 在线的拓扑图覆盖算法
基本思想是使用拥有三个状态的有限状态机(边界、正常和转移)来不断的进行切片分割和拓扑图构建。

其中边界状态通过探索当前边的所有相邻区域，而很好的处理直线运动的情况。

** 在直线运动环境中基于接触式传感器的路径覆盖
Contact sensor-based coverage of rectilinear environments

针对的是没有范围感觉能力的机器人在未知的直线运动环境中在线探测的情况。

*** 基本步骤
使用Cycle算法进行路径的覆盖，与此同时不断的构建环境的区域分割。

只有当遇到区域边界而无法继续进行环形路径扫描时，
选择一个仅仅基于机器人环境和当前位置的新路径。


** 基于栅格的路径覆盖方法
基于栅格的方法被认为是模糊的区域分割，其大多数方法都是“resolution-complete"，
也就是它们的完全性取决于栅格地图的精度。

*** 波正面算法(wavefront algorithm)
**** 具体方法
从终止点开始不断的传播波面，每次传播之后波面值加一直至到达起始点。
当传递结束之后，从起始点开始，每次选取相邻的点中最大的一个，
之后不停的重复上面的步骤，最后形成覆盖路径。

**** 改进
Shivashankar 提出了一个广义的波面算法来在线地获取在未知环境中的路径覆盖。

*** 伸展树方法
机器人不断地通过传感器构造部分栅格图，并沿着它的伸展树来生成一个系统的螺旋路径。
最终机器人可以形成覆盖每个栅格，且每个栅格仅被覆盖一次的路径。

**** 具体方法
从起始点开始，机器人不停地选择一个新的运动方向(以逆时针方向选取第一个新的mega--
mega为一个大的栅格，根据机器人的大小划分为四个和机器人一样的栅格，
如果有一个小栅格遍历过了，就认为mega为old)

**** 改进
BSA：不仅可以覆盖没有访问过的栅格，还可以覆盖被部分访问的栅格。

Choi 和Lee提出了一个Spiral-STC和BSA结合的方法，
通过减少转弯数来减少覆盖时间。

*** 神经网络的方法
Luo和Yang将栅格地图划分为栅格大小等于机器人的覆盖半径的情况下，
再利用基于membrane方程的shunting方程来决定与栅格对应的每个神经元的动力值。

**** 优势
可以处理动态环境

**** 改进
Qiu添加了局部路径规划的技术来减少计算量。

一个在有限时间内对机器人实行连续控制的相关方法也被提出。

*** 针对侧扫声纳的六角形分割方法
**** 应用范围
装备侧扫声纳的水下航行器

**** 具体方法
不断地使用多目标优化调整机器的朝向来最大化声纳系统的信息增益
