* Q1: static var and global variable 为何可以在退出函数后依然可以保存之前的值？
A1: 经过初始化或未初始化的静态/全局变量储存分别储存在虚拟内存空间给可执行文件分配的.data 或.bss section中， 他们不像储存在栈桢中的局部变量每次在进入函数后
都需要重新分配栈空间导致它们的值无法在不同调用中复用，而静态或全局变量直接从虚拟内存空间的指定区域读取， 它们的值也就可以进行修改而不变。

* Q2: 结构体做函数参数和用指向结构体的指针来实现有什么区别？
A2: 结构体做函数参数时进行的参数传递为的值传递（结构体中的参数值需要复制到寄存器或者栈桢空间中）效率比较低，如果想要使结构体中值保持不变可以在传入的结构体指针
前加上const， e.g. const int *p。
* Q3: 出现无法进入函数的问题并且显示segment fault？
A3: 可能是存在栈空间不够用的情况， 可能是当栈空间为了进入函数而向下生长时发生溢出错误。
